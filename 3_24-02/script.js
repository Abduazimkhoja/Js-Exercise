// lesson - 3 If-else, ternary, switch, Nullish, for, while

let title = "ECMAScript";
// ## HomeWork-1 üìö
// if else ‚Ü∑
if (title === "ECMAScript") console.log(true);
else console.log(false);

// Ternary operator ‚Ü∑
title === "ECMAScript" ? console.log(true) : console.log(false);

// Switch ‚Ü∑
switch (title) {
   case "ECMAScript":
      console.log(true);
      break;
   default:
      console.log(false);
      break;
}

// ## HomeWork-2 üìö
let num = 1;
// if else ‚Ü∑
if (num > 0) console.log("if, else " + 1);
else if (num < 0) console.log("if, else " + -1);
else console.log("if, else " + 0);

// Ternary operator ‚Ü∑
num > 0
   ? console.log("ternaty " + 1)
   : num < 0
   ? console.log("ternary " + -1)
   : console.log("ternary " + 0);

// ## HomeWork-3 üìö
let a = 1,
   b = 1;
// if else ‚Ü∑
if (a + b < 4) console.log("below");
else console.log("over");

// Ternary operator ‚Ü∑
a + b < 4 ? console.log("below") : console.log("over");

// ## HomeWork-4 üìö
let login = "Employee";
// if else ‚Ü∑
if (login == "Employee") console.log("hello");
else if (login == "Director") console.log("Greetings");
else if (login == "") console.log("no login");
else console.log("");

// Ternary operator ‚Ü∑
login == "Employee"
   ? console.log("hello")
   : login == "Director"
   ? console.log("Greetings")
   : login == ""
   ? console.log("no login")
   : console.log("");

// Switch ‚Ü∑
switch (login) {
   case "Employee":
      console.log("hello");
      break;
   case "Director":
      console.log("Greetings");
      break;
   case "":
      console.log("no login");
      break;
   default:
      console.log("");
      break;
}

// ## HomeWork-5 üìö PRIME NUMBER:
// if else ‚Ü∑
let pick = "2 3 5 7";
for (let i = 1; i <= 100; i += 2) {
   if (i != 1 && i % 2 != 0 && i % 3 != 0 && i % 5 != 0 && i % 7 != 0) {
      pick += ` ${i}`;
   }
}
console.log(pick);


// 1)  –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π day –ª–µ–∂–∏—Ç –∫–∞–∫–æ–µ-—Ç–æ —á–∏—Å–ª–æ –∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ—Ç 1 –¥–æ 31.
// –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤ –∫–∞–∫—É—é –¥–µ–∫–∞–¥—É –º–µ—Å—è—Ü–∞ –ø–æ–ø–∞–¥–∞–µ—Ç —ç—Ç–æ —á–∏—Å–ª–æ (–≤ –ø–µ—Ä–≤—É—é, –≤—Ç–æ—Ä—É—é –∏–ª–∏ —Ç—Ä–µ—Ç—å—é).

let day = 11;
// if else ‚Ü∑
if (10 > day && day > 0) console.log("–ø–µ—Ä–≤—ã–π");
else if (20 > day && day > 0) console.log("–≤—Ç–æ—Ä–∞—è");
else if (31 > day && day > 0) console.log("—Ç—Ä–µ—Ç—å—è");
else console.log("–ù–µ–≤–µ—Ä–Ω–æ");

// Ternary operator ‚Ü∑
10 > day && day > 0
   ? console.log("–ø–µ—Ä–≤—ã–π")
   : 20 > day && day > 0
   ? console.log("–≤—Ç–æ—Ä–∞—è")
   : 31 > day && day > 0
   ? console.log("—Ç—Ä–µ—Ç—å—è")
   : console.log("–ù–µ–≤–µ—Ä–Ω–æ");


// 2) –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π month –ª–µ–∂–∏—Ç –∫–∞–∫–æ–µ-—Ç–æ —á–∏—Å–ª–æ –∏–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ—Ç 1 –¥–æ 12.
// –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤ –∫–∞–∫—É—é –ø–æ—Ä—É –≥–æ–¥–∞ –ø–æ–ø–∞–¥–∞–µ—Ç —ç—Ç–æ—Ç –º–µ—Å—è—Ü (–∑–∏–º–∞, –ª–µ—Ç–æ, –≤–µ—Å–Ω–∞, –æ—Å–µ–Ω—å).

let month = 5;
// if else ‚Ü∑
if ((month <= 2 && month > 0) || month === 12) console.log("–ó–∏–º–∞");
else if (month >= 3 && month <= 5) console.log("–í–µ—Å–Ω–∞");
else if (month >= 6 && month <= 8) console.log("–ª–µ—Ç–æ");
else if (month >= 9 && month <= 11) console.log("–æ—Å–µ–Ω—å");

// Ternary operator ‚Ü∑
(month <= 2 && month > 0) || month === 12
   ? console.log("–ó–∏–º–∞")
   : month >= 3 && month <= 5
   ? console.log("–í–µ—Å–Ω–∞")
   : month >= 6 && month <= 8
   ? console.log("–ª–µ—Ç–æ")
   : month >= 9 && month <= 11
   ? console.log("–æ—Å–µ–Ω—å")
   : console.log("–ù–µ–≤–µ—Ä–Ω–æ");

// Switch ‚Ü∑
switch (month) {
   case 12:
   case 1:
   case 2:
      console.log("–ó–∏–º–∞");
      break;
   case 3:
   case 4:
   case 5:
      console.log("–í–µ—Å–Ω–∞");
      break;
   case 6:
   case 7:
   case 8:
      console.log("–ª–µ—Ç–æ");
      break;
   case 9:
   case 10:
   case 11:
      console.log("–æ—Å–µ–Ω—å");
      break;
   default:
      console.log("–ù–µ–≤–µ—Ä–Ω–æ");
      break;
}

// 3) –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, 'abcde'.
// –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ —è–≤–ª—è–µ—Ç—Å—è –±—É–∫–≤–∞ 'a'.
// –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–∫ - –≤—ã–≤–µ–¥–∏—Ç–µ '–¥–∞', –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–≤–µ–¥–∏—Ç–µ '–Ω–µ—Ç'.
